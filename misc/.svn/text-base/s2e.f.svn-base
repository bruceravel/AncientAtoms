      function s2e(elem,edge)
c      double precision function s2e(elem,edge)
c      implicit double precision (a-h,o-z)

c  this function returns the energy of a given element and edeg
c  input:
c    elem: 2 character atomic symbol (case insensitive)
c    edge: k, l1, l2, l3  (case insensitive)
c  output:
c    s2e:  energy value

      parameter (nelem=94)
      character*(*) elem, edge
      character*2   ed, el, test
      dimension     ek(nelem), el1(nelem), el2(nelem), el3(nelem)

      data (ek(i),i=1,60) /
     $          0.140000e-01, 0.250000e-01, 0.550000e-01, 0.112000e+00,
     $          0.188000e+00, 0.284000e+00, 0.402000e+00, 0.537000e+00,
     $          0.686000e+00, 0.867000e+00, 0.107200e+01, 0.130500e+01,
     $          0.156000e+01, 0.183900e+01, 0.214900e+01, 0.247200e+01,
     $          0.282200e+01, 0.320200e+01, 0.360700e+01, 0.403800e+01,
     $          0.449300e+01, 0.496500e+01, 0.546500e+01, 0.598900e+01,
     $          0.654000e+01, 0.711200e+01, 0.770900e+01, 0.833300e+01,
     $          0.897900e+01, 0.965900e+01, 0.103670e+02, 0.111040e+02,
     $          0.118680e+02, 0.126580e+02, 0.134740e+02, 0.143220e+02,
     $          0.152000e+02, 0.161050e+02, 0.170800e+02, 0.179980e+02,
     $          0.189860e+02, 0.199990e+02, 0.210450e+02, 0.221170e+02,
     $          0.232200e+02, 0.243500e+02, 0.255140e+02, 0.267110e+02,
     $          0.279400e+02, 0.292000e+02, 0.304910e+02, 0.318130e+02,
     $          0.331690e+02, 0.345820e+02, 0.359850e+02, 0.374410e+02,
     $          0.389250e+02, 0.404440e+02, 0.419910e+02, 0.435690e+02/

      data (ek(i),i=61,nelem) /
     $          0.451840e+02, 0.468350e+02, 0.485200e+02, 0.502400e+02,
     $          0.519960e+02, 0.537890e+02, 0.556180e+02, 0.574860e+02,
     $          0.593900e+02, 0.613320e+02, 0.633140e+02, 0.653510e+02,
     $          0.674140e+02, 0.695240e+02, 0.716760e+02, 0.738720e+02,
     $          0.761120e+02, 0.783950e+02, 0.807230e+02, 0.831030e+02,
     $          0.855280e+02, 0.880060e+02, 0.905270e+02, 0.931050e+02,
     $          0.957300e+02, 0.984170e+02, 0.101137e+03, 0.103922e+02,
     $          0.106755e+03, 0.109651e+03, 0.112601e+03, 0.115603e+03,
     $          0.,           0.121760e+03/

      data (el1(i),i=1,60) /
     $       0.000000e+00,  0.000000e+00,  0.000000e+00,  0.000000e+00,
     $       0.000000e+00,  0.000000e+00,  0.000000e+00,  0.000000e+00,
     $       0.000000e+00,  0.000000e+00,  0.000000e+00,  0.630000e-01,
     $       0.870000e-01,  0.118000e+00,  0.153000e+00,  0.193000e+00,
     $       0.238000e+00,  0.287000e+00,  0.341000e+00,  0.400000e+00,
     $       0.463000e+00,  0.531000e+00,  0.604000e+00,  0.682000e+00,
     $       0.754000e+00,  0.842000e+00,  0.929000e+00,  0.101200e+01,
     $       0.110000e+01,  0.119600e+01,  0.130200e+01,  0.141400e+01,
     $       0.153000e+01,  0.165300e+01,  0.178200e+01,  0.192000e+01,
     $       0.206500e+01,  0.221600e+01,  0.237300e+01,  0.253200e+01,
     $       0.269800e+01,  0.286600e+01,  0.304300e+01,  0.322400e+01,
     $       0.341200e+01,  0.360500e+01,  0.380600e+01,  0.401800e+01,
     $       0.423800e+01,  0.446500e+01,  0.469800e+01,  0.493900e+01,
     $       0.518800e+01,  0.545200e+01,  0.571300e+01,  0.598700e+01,
     $       0.626700e+01,  0.654900e+01,  0.683500e+01,  0.712600e+01/

      data (el1(i),i=61,nelem) /
     $       0.742800e+01,  0.773700e+01,  0.805200e+01,  0.837600e+01,
     $       0.870800e+01,  0.904700e+01,  0.939500e+01,  0.975200e+01,
     $       0.101160e+02,  0.104880e+02,  0.108700e+02,  0.112720e+02,
     $       0.116800e+02,  0.120980e+02,  0.125250e+02,  0.129640e+02,
     $       0.134240e+02,  0.138920e+02,  0.143530e+02,  0.148460e+02,
     $       0.153440e+02,  0.158600e+02,  0.163850e+02,  0.169390e+02,
     $       0.174930e+02,  0.180490e+02,  0.186390e+02,  0.192370e+02,
     $       0.198400e+02,  0.204700e+02,  0.211050e+02,  0.217560e+02,
     $       0.,            0.230950e+02/

      data (el2(i), i=1,63) / 27*0.,
     $      0.872000e+00,  0.952000e+00,  0.104400e+01,  0.114200e+01,
     $      0.124900e+01,  0.136000e+01,  0.147700e+01,  0.159600e+01,
     $      0.172600e+01,  0.186300e+01,  0.200700e+01,  0.215600e+01,
     $      0.230700e+01,  0.246500e+01,  0.262500e+01,  0.279300e+01,
     $      0.296700e+01,  0.314600e+01,  0.333000e+01,  0.352400e+01,
     $      0.372700e+01,  0.393800e+01,  0.415600e+01,  0.438100e+01,
     $      0.461200e+01,  0.485200e+01,  0.510000e+01,  0.535900e+01,
     $      0.562400e+01,  0.589100e+01,  0.616500e+01,  0.644100e+01,
     $      0.672200e+01,  0.701300e+01,  0.731200e+01,  0.761800e+01/

      data (el2(i), i=64,nelem) /
     $      0.793100e+01,  0.825200e+01,  0.858100e+01,  0.891900e+01,
     $      0.926500e+01,  0.961800e+01,  0.997800e+01,  0.103490e+02,
     $      0.107390e+02,  0.111360e+02,  0.115420e+02,  0.119570e+02,
     $      0.123840e+02,  0.128240e+02,  0.132730e+02,  0.137330e+02,
     $      0.142090e+02,  0.146980e+02,  0.151980e+02,  0.157080e+02,
     $      0.162440e+02,  0.167850e+02,  0.173370e+02,  0.179070e+02,
     $      0.184840e+02,  0.190830e+02,  0.196920e+02,  0.203140e+02,
     $      0.209470e+02,  0,             0.222630e+02/

      data (el3(i), i=1,63) / 27*0.,
     $      0.885000e+00,  0.932000e+00,  0.102100e+01,  0.111500e+01,
     $      0.121800e+01,  0.132500e+01,  0.143600e+01,  0.155000e+01,
     $      0.167500e+01,  0.180500e+01,  0.194000e+01,  0.208000e+01,
     $      0.222300e+01,  0.237100e+01,  0.252000e+01,  0.267700e+01,
     $      0.283800e+01,  0.300300e+01,  0.317300e+01,  0.335100e+01,
     $      0.353700e+01,  0.373000e+01,  0.392900e+01,  0.413200e+01,
     $      0.434100e+01,  0.455700e+01,  0.478100e+01,  0.501200e+01,
     $      0.524700e+01,  0.548300e+01,  0.572400e+01,  0.596500e+01,
     $      0.620800e+01,  0.646000e+01,  0.671700e+01,  0.697700e+01/

      data (el3(i), i=64,nelem) /
     $      0.724300e+01,  0.751500e+01,  0.779000e+01,  0.807100e+01,
     $      0.835800e+01,  0.864800e+01,  0.894300e+01,  0.924400e+01,
     $      0.956100e+01,  0.988100e+01,  0.102040e+02,  0.105340e+02,
     $      0.108710e+02,  0.112150e+02,  0.115640e+02,  0.119180e+02,
     $      0.122840e+02,  0.126570e+02,  0.130550e+02,  0.134180e+02,
     $      0.138140e+02,  0.142140e+02,  0.146120e+02,  0.150310e+02,
     $      0.154440e+02,  0.158710e+02,  0.163000e+02,  0.167330e+02,
     $      0.171670e+02,  0.,            0.180530e+02/

      ed=edge
      el=elem
      i=is2z(el)

c  check case
c  ab must be the same case as k,l1,l2,l3 below for this to work!
      test = 'ab'
      call case(test,ed)
      call case(test,el)

      if ((el.eq.'nu').or.(i.eq.0)) then
          s2e = 0.e0
          goto 99
      endif

      s2e = 0.e0
      if (ed.eq.'k') then
          s2e = ek(i)
      elseif (ed.eq.'l1') then
          s2e = el1(i)
      elseif (ed.eq.'l2') then
          s2e = el2(i)
      elseif (ed.eq.'l3') then
          s2e = el3(i)
      endif

 99   continue
      return
c  end function s2e
      end
